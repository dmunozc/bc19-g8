var cov_1hw6k63q2i=function(){var path="C:\\Users\\Bandesh\\CS554\\bc19-g8\\bots\\movement_test.js";var hash="854298c3c7659ecdc6df6a62aa5b45a4bab7d33f";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Bandesh\\CS554\\bc19-g8\\bots\\movement_test.js",statementMap:{"0":{start:{line:2,column:20},end:{line:2,column:87}},"1":{start:{line:4,column:13},end:{line:4,column:14}},"2":{start:{line:5,column:13},end:{line:5,column:14}},"3":{start:{line:6,column:14},end:{line:6,column:15}},"4":{start:{line:7,column:15},end:{line:7,column:16}},"5":{start:{line:8,column:14},end:{line:8,column:15}},"6":{start:{line:9,column:15},end:{line:9,column:16}},"7":{start:{line:11,column:22},end:{line:11,column:35}},"8":{start:{line:22,column:0},end:{line:31,column:1}},"9":{start:{line:25,column:2},end:{line:29,column:3}},"10":{start:{line:26,column:4},end:{line:28,column:5}},"11":{start:{line:27,column:6},end:{line:27,column:18}},"12":{start:{line:30,column:2},end:{line:30,column:15}},"13":{start:{line:44,column:0},end:{line:63,column:1}},"14":{start:{line:48,column:10},end:{line:48,column:11}},"15":{start:{line:49,column:15},end:{line:49,column:17}},"16":{start:{line:50,column:2},end:{line:61,column:3}},"17":{start:{line:51,column:4},end:{line:60,column:5}},"18":{start:{line:52,column:6},end:{line:59,column:7}},"19":{start:{line:53,column:8},end:{line:58,column:9}},"20":{start:{line:54,column:10},end:{line:57,column:11}},"21":{start:{line:55,column:10},end:{line:55,column:28}},"22":{start:{line:56,column:10},end:{line:56,column:14}},"23":{start:{line:62,column:2},end:{line:62,column:16}},"24":{start:{line:72,column:0},end:{line:75,column:1}},"25":{start:{line:74,column:2},end:{line:74,column:58}},"26":{start:{line:103,column:0},end:{line:109,column:1}},"27":{start:{line:105,column:15},end:{line:105,column:20}},"28":{start:{line:106,column:2},end:{line:106,column:72}},"29":{start:{line:107,column:2},end:{line:107,column:72}},"30":{start:{line:108,column:2},end:{line:108,column:16}},"31":{start:{line:132,column:0},end:{line:167,column:1}},"32":{start:{line:134,column:15},end:{line:134,column:20}},"33":{start:{line:137,column:2},end:{line:155,column:3}},"34":{start:{line:138,column:4},end:{line:153,column:5}},"35":{start:{line:140,column:6},end:{line:140,column:18}},"36":{start:{line:141,column:6},end:{line:143,column:7}},"37":{start:{line:142,column:8},end:{line:142,column:13}},"38":{start:{line:144,column:6},end:{line:144,column:36}},"39":{start:{line:146,column:9},end:{line:153,column:5}},"40":{start:{line:148,column:6},end:{line:148,column:18}},"41":{start:{line:149,column:6},end:{line:151,column:7}},"42":{start:{line:150,column:8},end:{line:150,column:13}},"43":{start:{line:152,column:6},end:{line:152,column:36}},"44":{start:{line:154,column:4},end:{line:154,column:18}},"45":{start:{line:156,column:2},end:{line:156,column:18}},"46":{start:{line:157,column:2},end:{line:159,column:3}},"47":{start:{line:158,column:4},end:{line:158,column:9}},"48":{start:{line:160,column:2},end:{line:160,column:18}},"49":{start:{line:161,column:2},end:{line:163,column:3}},"50":{start:{line:162,column:4},end:{line:162,column:9}},"51":{start:{line:165,column:2},end:{line:165,column:47}},"52":{start:{line:174,column:0},end:{line:180,column:1}},"53":{start:{line:176,column:2},end:{line:178,column:3}},"54":{start:{line:177,column:4},end:{line:177,column:48}},"55":{start:{line:179,column:2},end:{line:179,column:86}},"56":{start:{line:191,column:0},end:{line:203,column:1}},"57":{start:{line:194,column:18},end:{line:194,column:73}},"58":{start:{line:196,column:2},end:{line:201,column:3}},"59":{start:{line:197,column:4},end:{line:200,column:5}},"60":{start:{line:198,column:6},end:{line:198,column:28}},"61":{start:{line:199,column:6},end:{line:199,column:10}},"62":{start:{line:202,column:2},end:{line:202,column:18}},"63":{start:{line:210,column:0},end:{line:222,column:1}},"64":{start:{line:213,column:15},end:{line:213,column:17}},"65":{start:{line:214,column:2},end:{line:220,column:3}},"66":{start:{line:215,column:4},end:{line:219,column:5}},"67":{start:{line:216,column:4},end:{line:216,column:53}},"68":{start:{line:218,column:6},end:{line:218,column:22}},"69":{start:{line:221,column:2},end:{line:221,column:16}},"70":{start:{line:233,column:0},end:{line:244,column:1}},"71":{start:{line:236,column:15},end:{line:236,column:17}},"72":{start:{line:237,column:22},end:{line:237,column:24}},"73":{start:{line:238,column:2},end:{line:242,column:3}},"74":{start:{line:239,column:4},end:{line:239,column:59}},"75":{start:{line:240,column:4},end:{line:240,column:59}},"76":{start:{line:241,column:4},end:{line:241,column:61}},"77":{start:{line:243,column:2},end:{line:243,column:16}},"78":{start:{line:246,column:0},end:{line:249,column:1}},"79":{start:{line:248,column:2},end:{line:248,column:94}},"80":{start:{line:251,column:0},end:{line:254,column:1}},"81":{start:{line:253,column:2},end:{line:253,column:94}},"82":{start:{line:256,column:0},end:{line:301,column:1}},"83":{start:{line:258,column:2},end:{line:260,column:3}},"84":{start:{line:259,column:4},end:{line:259,column:23}},"85":{start:{line:261,column:17},end:{line:261,column:19}},"86":{start:{line:262,column:14},end:{line:262,column:16}},"87":{start:{line:263,column:14},end:{line:263,column:16}},"88":{start:{line:264,column:16},end:{line:264,column:18}},"89":{start:{line:269,column:2},end:{line:269,column:85}},"90":{start:{line:271,column:2},end:{line:271,column:52}},"91":{start:{line:273,column:2},end:{line:273,column:75}},"92":{start:{line:276,column:2},end:{line:276,column:33}},"93":{start:{line:277,column:2},end:{line:281,column:3}},"94":{start:{line:278,column:4},end:{line:280,column:5}},"95":{start:{line:279,column:6},end:{line:279,column:37}},"96":{start:{line:282,column:2},end:{line:286,column:3}},"97":{start:{line:283,column:4},end:{line:285,column:5}},"98":{start:{line:284,column:6},end:{line:284,column:22}},"99":{start:{line:287,column:2},end:{line:298,column:3}},"100":{start:{line:288,column:4},end:{line:288,column:35}},"101":{start:{line:289,column:4},end:{line:289,column:27}},"102":{start:{line:290,column:4},end:{line:295,column:5}},"103":{start:{line:291,column:6},end:{line:294,column:7}},"104":{start:{line:292,column:8},end:{line:292,column:39}},"105":{start:{line:293,column:8},end:{line:293,column:31}},"106":{start:{line:297,column:4},end:{line:297,column:27}},"107":{start:{line:300,column:2},end:{line:300,column:99}},"108":{start:{line:330,column:0},end:{line:393,column:1}},"109":{start:{line:335,column:2},end:{line:337,column:3}},"110":{start:{line:336,column:4},end:{line:336,column:23}},"111":{start:{line:345,column:18},end:{line:345,column:65}},"112":{start:{line:346,column:20},end:{line:346,column:79}},"113":{start:{line:349,column:20},end:{line:349,column:59}},"114":{start:{line:351,column:22},end:{line:351,column:27}},"115":{start:{line:353,column:2},end:{line:357,column:3}},"116":{start:{line:354,column:4},end:{line:354,column:53}},"117":{start:{line:355,column:4},end:{line:355,column:53}},"118":{start:{line:356,column:4},end:{line:356,column:25}},"119":{start:{line:358,column:2},end:{line:363,column:3}},"120":{start:{line:359,column:4},end:{line:362,column:5}},"121":{start:{line:360,column:6},end:{line:360,column:42}},"122":{start:{line:361,column:6},end:{line:361,column:12}},"123":{start:{line:364,column:2},end:{line:369,column:3}},"124":{start:{line:365,column:4},end:{line:368,column:5}},"125":{start:{line:366,column:6},end:{line:366,column:42}},"126":{start:{line:367,column:6},end:{line:367,column:12}},"127":{start:{line:370,column:2},end:{line:372,column:3}},"128":{start:{line:371,column:4},end:{line:371,column:25}},"129":{start:{line:374,column:2},end:{line:379,column:3}},"130":{start:{line:375,column:4},end:{line:377,column:5}},"131":{start:{line:376,column:6},end:{line:376,column:25}},"132":{start:{line:378,column:4},end:{line:378,column:58}},"133":{start:{line:380,column:2},end:{line:380,column:70}},"134":{start:{line:384,column:16},end:{line:384,column:52}},"135":{start:{line:388,column:2},end:{line:390,column:3}},"136":{start:{line:389,column:4},end:{line:389,column:51}},"137":{start:{line:392,column:2},end:{line:392,column:67}},"138":{start:{line:405,column:0},end:{line:419,column:1}},"139":{start:{line:407,column:13},end:{line:407,column:15}},"140":{start:{line:408,column:17},end:{line:408,column:91}},"141":{start:{line:409,column:10},end:{line:409,column:11}},"142":{start:{line:410,column:2},end:{line:410,column:38}},"143":{start:{line:411,column:2},end:{line:416,column:3}},"144":{start:{line:413,column:4},end:{line:413,column:92}},"145":{start:{line:414,column:4},end:{line:414,column:40}},"146":{start:{line:415,column:4},end:{line:415,column:8}},"147":{start:{line:417,column:2},end:{line:417,column:14}},"148":{start:{line:427,column:0},end:{line:434,column:1}},"149":{start:{line:429,column:12},end:{line:429,column:14}},"150":{start:{line:430,column:2},end:{line:432,column:3}},"151":{start:{line:430,column:15},end:{line:430,column:16}},"152":{start:{line:431,column:4},end:{line:431,column:42}},"153":{start:{line:433,column:2},end:{line:433,column:13}},"154":{start:{line:435,column:0},end:{line:452,column:1}},"155":{start:{line:439,column:10},end:{line:439,column:11}},"156":{start:{line:440,column:15},end:{line:440,column:17}},"157":{start:{line:441,column:2},end:{line:450,column:3}},"158":{start:{line:442,column:4},end:{line:449,column:5}},"159":{start:{line:443,column:6},end:{line:448,column:7}},"160":{start:{line:444,column:8},end:{line:447,column:9}},"161":{start:{line:445,column:8},end:{line:445,column:26}},"162":{start:{line:446,column:8},end:{line:446,column:12}},"163":{start:{line:451,column:2},end:{line:451,column:16}},"164":{start:{line:454,column:0},end:{line:474,column:1}},"165":{start:{line:458,column:10},end:{line:458,column:11}},"166":{start:{line:459,column:15},end:{line:459,column:17}},"167":{start:{line:460,column:2},end:{line:472,column:3}},"168":{start:{line:461,column:4},end:{line:471,column:5}},"169":{start:{line:462,column:6},end:{line:464,column:7}},"170":{start:{line:463,column:8},end:{line:463,column:17}},"171":{start:{line:465,column:6},end:{line:470,column:7}},"172":{start:{line:466,column:8},end:{line:469,column:9}},"173":{start:{line:467,column:10},end:{line:467,column:44}},"174":{start:{line:468,column:10},end:{line:468,column:14}},"175":{start:{line:473,column:2},end:{line:473,column:16}},"176":{start:{line:476,column:0},end:{line:496,column:1}},"177":{start:{line:480,column:10},end:{line:480,column:11}},"178":{start:{line:481,column:15},end:{line:481,column:17}},"179":{start:{line:482,column:2},end:{line:494,column:3}},"180":{start:{line:483,column:4},end:{line:493,column:5}},"181":{start:{line:484,column:6},end:{line:487,column:7}},"182":{start:{line:485,column:8},end:{line:485,column:42}},"183":{start:{line:486,column:8},end:{line:486,column:12}},"184":{start:{line:488,column:6},end:{line:492,column:7}},"185":{start:{line:489,column:8},end:{line:491,column:9}},"186":{start:{line:490,column:10},end:{line:490,column:19}},"187":{start:{line:495,column:2},end:{line:495,column:16}},"188":{start:{line:499,column:0},end:{line:570,column:1}},"189":{start:{line:501,column:20},end:{line:501,column:209}},"190":{start:{line:501,column:51},end:{line:501,column:207}},"191":{start:{line:503,column:23},end:{line:503,column:25}},"192":{start:{line:504,column:25},end:{line:504,column:27}},"193":{start:{line:509,column:29},end:{line:509,column:31}},"194":{start:{line:512,column:2},end:{line:512,column:34}},"195":{start:{line:513,column:2},end:{line:569,column:3}},"196":{start:{line:514,column:4},end:{line:518,column:5}},"197":{start:{line:515,column:6},end:{line:515,column:68}},"198":{start:{line:516,column:6},end:{line:516,column:133}},"199":{start:{line:517,column:6},end:{line:517,column:139}},"200":{start:{line:523,column:4},end:{line:528,column:5}},"201":{start:{line:524,column:6},end:{line:527,column:7}},"202":{start:{line:525,column:8},end:{line:525,column:35}},"203":{start:{line:526,column:8},end:{line:526,column:12}},"204":{start:{line:531,column:4},end:{line:540,column:5}},"205":{start:{line:533,column:17},end:{line:533,column:69}},"206":{start:{line:536,column:6},end:{line:539,column:7}},"207":{start:{line:537,column:8},end:{line:537,column:34}},"208":{start:{line:538,column:8},end:{line:538,column:33}},"209":{start:{line:542,column:4},end:{line:542,column:28}},"210":{start:{line:543,column:4},end:{line:543,column:95}},"211":{start:{line:545,column:4},end:{line:550,column:5}},"212":{start:{line:546,column:6},end:{line:549,column:7}},"213":{start:{line:547,column:8},end:{line:547,column:30}},"214":{start:{line:548,column:8},end:{line:548,column:12}},"215":{start:{line:553,column:4},end:{line:555,column:5}},"216":{start:{line:554,column:6},end:{line:554,column:50}},"217":{start:{line:556,column:4},end:{line:556,column:27}},"218":{start:{line:558,column:4},end:{line:558,column:24}},"219":{start:{line:559,column:4},end:{line:559,column:95}},"220":{start:{line:560,column:4},end:{line:560,column:54}},"221":{start:{line:561,column:4},end:{line:563,column:5}},"222":{start:{line:562,column:6},end:{line:562,column:56}},"223":{start:{line:564,column:4},end:{line:564,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:32},end:{line:22,column:33}},loc:{start:{line:22,column:52},end:{line:31,column:1}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:44,column:33},end:{line:44,column:34}},loc:{start:{line:44,column:58},end:{line:63,column:1}},line:44},"2":{name:"(anonymous_2)",decl:{start:{line:72,column:31},end:{line:72,column:32}},loc:{start:{line:72,column:45},end:{line:75,column:1}},line:72},"3":{name:"(anonymous_3)",decl:{start:{line:103,column:24},end:{line:103,column:25}},loc:{start:{line:103,column:45},end:{line:109,column:1}},line:103},"4":{name:"(anonymous_4)",decl:{start:{line:132,column:27},end:{line:132,column:28}},loc:{start:{line:132,column:73},end:{line:167,column:1}},line:132},"5":{name:"(anonymous_5)",decl:{start:{line:174,column:23},end:{line:174,column:24}},loc:{start:{line:174,column:44},end:{line:180,column:1}},line:174},"6":{name:"(anonymous_6)",decl:{start:{line:191,column:29},end:{line:191,column:30}},loc:{start:{line:191,column:84},end:{line:203,column:1}},line:191},"7":{name:"(anonymous_7)",decl:{start:{line:210,column:32},end:{line:210,column:33}},loc:{start:{line:210,column:55},end:{line:222,column:1}},line:210},"8":{name:"(anonymous_8)",decl:{start:{line:233,column:32},end:{line:233,column:33}},loc:{start:{line:233,column:78},end:{line:244,column:1}},line:233},"9":{name:"(anonymous_9)",decl:{start:{line:246,column:35},end:{line:246,column:36}},loc:{start:{line:246,column:102},end:{line:249,column:1}},line:246},"10":{name:"(anonymous_10)",decl:{start:{line:251,column:35},end:{line:251,column:36}},loc:{start:{line:251,column:102},end:{line:254,column:1}},line:251},"11":{name:"(anonymous_11)",decl:{start:{line:256,column:30},end:{line:256,column:31}},loc:{start:{line:256,column:102},end:{line:301,column:1}},line:256},"12":{name:"(anonymous_12)",decl:{start:{line:330,column:24},end:{line:330,column:25}},loc:{start:{line:330,column:91},end:{line:393,column:1}},line:330},"13":{name:"(anonymous_13)",decl:{start:{line:405,column:34},end:{line:405,column:35}},loc:{start:{line:405,column:71},end:{line:419,column:1}},line:405},"14":{name:"(anonymous_14)",decl:{start:{line:427,column:34},end:{line:427,column:35}},loc:{start:{line:427,column:51},end:{line:434,column:1}},line:427},"15":{name:"(anonymous_15)",decl:{start:{line:435,column:41},end:{line:435,column:42}},loc:{start:{line:435,column:59},end:{line:452,column:1}},line:435},"16":{name:"(anonymous_16)",decl:{start:{line:454,column:63},end:{line:454,column:64}},loc:{start:{line:454,column:81},end:{line:474,column:1}},line:454},"17":{name:"(anonymous_17)",decl:{start:{line:476,column:65},end:{line:476,column:66}},loc:{start:{line:476,column:83},end:{line:496,column:1}},line:476},"18":{name:"(anonymous_18)",decl:{start:{line:499,column:37},end:{line:499,column:38}},loc:{start:{line:499,column:106},end:{line:570,column:1}},line:499},"19":{name:"(anonymous_19)",decl:{start:{line:501,column:41},end:{line:501,column:42}},loc:{start:{line:501,column:51},end:{line:501,column:207}},line:501}},branchMap:{"0":{loc:{start:{line:26,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:28,column:5}},{start:{line:26,column:4},end:{line:28,column:5}}],line:26},"1":{loc:{start:{line:26,column:7},end:{line:26,column:55}},type:"binary-expr",locations:[{start:{line:26,column:7},end:{line:26,column:29}},{start:{line:26,column:33},end:{line:26,column:55}}],line:26},"2":{loc:{start:{line:52,column:6},end:{line:59,column:7}},type:"if",locations:[{start:{line:52,column:6},end:{line:59,column:7}},{start:{line:52,column:6},end:{line:59,column:7}}],line:52},"3":{loc:{start:{line:53,column:8},end:{line:58,column:9}},type:"if",locations:[{start:{line:53,column:8},end:{line:58,column:9}},{start:{line:53,column:8},end:{line:58,column:9}}],line:53},"4":{loc:{start:{line:53,column:13},end:{line:53,column:127}},type:"binary-expr",locations:[{start:{line:53,column:13},end:{line:53,column:28}},{start:{line:53,column:32},end:{line:53,column:57}},{start:{line:53,column:61},end:{line:53,column:76}},{start:{line:53,column:80},end:{line:53,column:105}},{start:{line:53,column:110},end:{line:53,column:116}},{start:{line:53,column:120},end:{line:53,column:126}}],line:53},"5":{loc:{start:{line:54,column:10},end:{line:57,column:11}},type:"if",locations:[{start:{line:54,column:10},end:{line:57,column:11}},{start:{line:54,column:10},end:{line:57,column:11}}],line:54},"6":{loc:{start:{line:106,column:14},end:{line:106,column:72}},type:"cond-expr",locations:[{start:{line:106,column:38},end:{line:106,column:39}},{start:{line:106,column:42},end:{line:106,column:72}}],line:106},"7":{loc:{start:{line:106,column:42},end:{line:106,column:72}},type:"cond-expr",locations:[{start:{line:106,column:66},end:{line:106,column:68}},{start:{line:106,column:71},end:{line:106,column:72}}],line:106},"8":{loc:{start:{line:107,column:14},end:{line:107,column:72}},type:"cond-expr",locations:[{start:{line:107,column:38},end:{line:107,column:39}},{start:{line:107,column:42},end:{line:107,column:72}}],line:107},"9":{loc:{start:{line:107,column:42},end:{line:107,column:72}},type:"cond-expr",locations:[{start:{line:107,column:66},end:{line:107,column:68}},{start:{line:107,column:71},end:{line:107,column:72}}],line:107},"10":{loc:{start:{line:137,column:2},end:{line:155,column:3}},type:"if",locations:[{start:{line:137,column:2},end:{line:155,column:3}},{start:{line:137,column:2},end:{line:155,column:3}}],line:137},"11":{loc:{start:{line:137,column:5},end:{line:137,column:43}},type:"binary-expr",locations:[{start:{line:137,column:5},end:{line:137,column:22}},{start:{line:137,column:26},end:{line:137,column:43}}],line:137},"12":{loc:{start:{line:138,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:138,column:4},end:{line:153,column:5}},{start:{line:138,column:4},end:{line:153,column:5}}],line:138},"13":{loc:{start:{line:146,column:9},end:{line:153,column:5}},type:"if",locations:[{start:{line:146,column:9},end:{line:153,column:5}},{start:{line:146,column:9},end:{line:153,column:5}}],line:146},"14":{loc:{start:{line:157,column:8},end:{line:157,column:74}},type:"binary-expr",locations:[{start:{line:157,column:8},end:{line:157,column:14}},{start:{line:157,column:18},end:{line:157,column:74}}],line:157},"15":{loc:{start:{line:161,column:8},end:{line:161,column:75}},type:"binary-expr",locations:[{start:{line:161,column:8},end:{line:161,column:14}},{start:{line:161,column:18},end:{line:161,column:75}}],line:161},"16":{loc:{start:{line:176,column:2},end:{line:178,column:3}},type:"if",locations:[{start:{line:176,column:2},end:{line:178,column:3}},{start:{line:176,column:2},end:{line:178,column:3}}],line:176},"17":{loc:{start:{line:176,column:5},end:{line:176,column:71}},type:"binary-expr",locations:[{start:{line:176,column:5},end:{line:176,column:36}},{start:{line:176,column:40},end:{line:176,column:71}}],line:176},"18":{loc:{start:{line:197,column:4},end:{line:200,column:5}},type:"if",locations:[{start:{line:197,column:4},end:{line:200,column:5}},{start:{line:197,column:4},end:{line:200,column:5}}],line:197},"19":{loc:{start:{line:215,column:4},end:{line:219,column:5}},type:"if",locations:[{start:{line:215,column:4},end:{line:219,column:5}},{start:{line:215,column:4},end:{line:219,column:5}}],line:215},"20":{loc:{start:{line:258,column:2},end:{line:260,column:3}},type:"if",locations:[{start:{line:258,column:2},end:{line:260,column:3}},{start:{line:258,column:2},end:{line:260,column:3}}],line:258},"21":{loc:{start:{line:278,column:4},end:{line:280,column:5}},type:"if",locations:[{start:{line:278,column:4},end:{line:280,column:5}},{start:{line:278,column:4},end:{line:280,column:5}}],line:278},"22":{loc:{start:{line:283,column:4},end:{line:285,column:5}},type:"if",locations:[{start:{line:283,column:4},end:{line:285,column:5}},{start:{line:283,column:4},end:{line:285,column:5}}],line:283},"23":{loc:{start:{line:287,column:2},end:{line:298,column:3}},type:"if",locations:[{start:{line:287,column:2},end:{line:298,column:3}},{start:{line:287,column:2},end:{line:298,column:3}}],line:287},"24":{loc:{start:{line:291,column:6},end:{line:294,column:7}},type:"if",locations:[{start:{line:291,column:6},end:{line:294,column:7}},{start:{line:291,column:6},end:{line:294,column:7}}],line:291},"25":{loc:{start:{line:335,column:2},end:{line:337,column:3}},type:"if",locations:[{start:{line:335,column:2},end:{line:337,column:3}},{start:{line:335,column:2},end:{line:337,column:3}}],line:335},"26":{loc:{start:{line:353,column:2},end:{line:357,column:3}},type:"if",locations:[{start:{line:353,column:2},end:{line:357,column:3}},{start:{line:353,column:2},end:{line:357,column:3}}],line:353},"27":{loc:{start:{line:353,column:6},end:{line:353,column:132}},type:"binary-expr",locations:[{start:{line:353,column:7},end:{line:353,column:26}},{start:{line:353,column:31},end:{line:353,column:50}},{start:{line:353,column:55},end:{line:353,column:132}}],line:353},"28":{loc:{start:{line:358,column:25},end:{line:358,column:49}},type:"binary-expr",locations:[{start:{line:358,column:25},end:{line:358,column:30}},{start:{line:358,column:35},end:{line:358,column:49}}],line:358},"29":{loc:{start:{line:359,column:4},end:{line:362,column:5}},type:"if",locations:[{start:{line:359,column:4},end:{line:362,column:5}},{start:{line:359,column:4},end:{line:362,column:5}}],line:359},"30":{loc:{start:{line:364,column:25},end:{line:364,column:49}},type:"binary-expr",locations:[{start:{line:364,column:25},end:{line:364,column:30}},{start:{line:364,column:35},end:{line:364,column:49}}],line:364},"31":{loc:{start:{line:365,column:4},end:{line:368,column:5}},type:"if",locations:[{start:{line:365,column:4},end:{line:368,column:5}},{start:{line:365,column:4},end:{line:368,column:5}}],line:365},"32":{loc:{start:{line:370,column:2},end:{line:372,column:3}},type:"if",locations:[{start:{line:370,column:2},end:{line:372,column:3}},{start:{line:370,column:2},end:{line:372,column:3}}],line:370},"33":{loc:{start:{line:370,column:5},end:{line:370,column:101}},type:"binary-expr",locations:[{start:{line:370,column:5},end:{line:370,column:19}},{start:{line:370,column:24},end:{line:370,column:60}},{start:{line:370,column:64},end:{line:370,column:100}}],line:370},"34":{loc:{start:{line:374,column:2},end:{line:379,column:3}},type:"if",locations:[{start:{line:374,column:2},end:{line:379,column:3}},{start:{line:374,column:2},end:{line:379,column:3}}],line:374},"35":{loc:{start:{line:375,column:4},end:{line:377,column:5}},type:"if",locations:[{start:{line:375,column:4},end:{line:377,column:5}},{start:{line:375,column:4},end:{line:377,column:5}}],line:375},"36":{loc:{start:{line:411,column:8},end:{line:411,column:70}},type:"binary-expr",locations:[{start:{line:411,column:8},end:{line:411,column:37}},{start:{line:411,column:41},end:{line:411,column:70}}],line:411},"37":{loc:{start:{line:443,column:6},end:{line:448,column:7}},type:"if",locations:[{start:{line:443,column:6},end:{line:448,column:7}},{start:{line:443,column:6},end:{line:448,column:7}}],line:443},"38":{loc:{start:{line:443,column:11},end:{line:443,column:125}},type:"binary-expr",locations:[{start:{line:443,column:11},end:{line:443,column:26}},{start:{line:443,column:30},end:{line:443,column:55}},{start:{line:443,column:59},end:{line:443,column:74}},{start:{line:443,column:78},end:{line:443,column:103}},{start:{line:443,column:108},end:{line:443,column:114}},{start:{line:443,column:118},end:{line:443,column:124}}],line:443},"39":{loc:{start:{line:444,column:8},end:{line:447,column:9}},type:"if",locations:[{start:{line:444,column:8},end:{line:447,column:9}},{start:{line:444,column:8},end:{line:447,column:9}}],line:444},"40":{loc:{start:{line:462,column:6},end:{line:464,column:7}},type:"if",locations:[{start:{line:462,column:6},end:{line:464,column:7}},{start:{line:462,column:6},end:{line:464,column:7}}],line:462},"41":{loc:{start:{line:462,column:9},end:{line:462,column:117}},type:"binary-expr",locations:[{start:{line:462,column:10},end:{line:462,column:16}},{start:{line:462,column:20},end:{line:462,column:26}},{start:{line:462,column:32},end:{line:462,column:38}},{start:{line:462,column:42},end:{line:462,column:48}},{start:{line:462,column:54},end:{line:462,column:61}},{start:{line:462,column:65},end:{line:462,column:71}},{start:{line:462,column:77},end:{line:462,column:83}},{start:{line:462,column:87},end:{line:462,column:93}},{start:{line:462,column:99},end:{line:462,column:105}},{start:{line:462,column:109},end:{line:462,column:116}}],line:462},"42":{loc:{start:{line:465,column:6},end:{line:470,column:7}},type:"if",locations:[{start:{line:465,column:6},end:{line:470,column:7}},{start:{line:465,column:6},end:{line:470,column:7}}],line:465},"43":{loc:{start:{line:465,column:11},end:{line:465,column:103}},type:"binary-expr",locations:[{start:{line:465,column:11},end:{line:465,column:26}},{start:{line:465,column:30},end:{line:465,column:55}},{start:{line:465,column:59},end:{line:465,column:74}},{start:{line:465,column:78},end:{line:465,column:103}}],line:465},"44":{loc:{start:{line:466,column:8},end:{line:469,column:9}},type:"if",locations:[{start:{line:466,column:8},end:{line:469,column:9}},{start:{line:466,column:8},end:{line:469,column:9}}],line:466},"45":{loc:{start:{line:484,column:6},end:{line:487,column:7}},type:"if",locations:[{start:{line:484,column:6},end:{line:487,column:7}},{start:{line:484,column:6},end:{line:487,column:7}}],line:484},"46":{loc:{start:{line:484,column:9},end:{line:484,column:117}},type:"binary-expr",locations:[{start:{line:484,column:10},end:{line:484,column:16}},{start:{line:484,column:20},end:{line:484,column:26}},{start:{line:484,column:32},end:{line:484,column:38}},{start:{line:484,column:42},end:{line:484,column:48}},{start:{line:484,column:54},end:{line:484,column:61}},{start:{line:484,column:65},end:{line:484,column:71}},{start:{line:484,column:77},end:{line:484,column:83}},{start:{line:484,column:87},end:{line:484,column:93}},{start:{line:484,column:99},end:{line:484,column:105}},{start:{line:484,column:109},end:{line:484,column:116}}],line:484},"47":{loc:{start:{line:488,column:6},end:{line:492,column:7}},type:"if",locations:[{start:{line:488,column:6},end:{line:492,column:7}},{start:{line:488,column:6},end:{line:492,column:7}}],line:488},"48":{loc:{start:{line:488,column:11},end:{line:488,column:103}},type:"binary-expr",locations:[{start:{line:488,column:11},end:{line:488,column:26}},{start:{line:488,column:30},end:{line:488,column:55}},{start:{line:488,column:59},end:{line:488,column:74}},{start:{line:488,column:78},end:{line:488,column:103}}],line:488},"49":{loc:{start:{line:489,column:8},end:{line:491,column:9}},type:"if",locations:[{start:{line:489,column:8},end:{line:491,column:9}},{start:{line:489,column:8},end:{line:491,column:9}}],line:489},"50":{loc:{start:{line:501,column:51},end:{line:501,column:207}},type:"binary-expr",locations:[{start:{line:501,column:51},end:{line:501,column:120}},{start:{line:501,column:124},end:{line:501,column:189}},{start:{line:501,column:193},end:{line:501,column:207}}],line:501},"51":{loc:{start:{line:501,column:126},end:{line:501,column:188}},type:"binary-expr",locations:[{start:{line:501,column:126},end:{line:501,column:155}},{start:{line:501,column:159},end:{line:501,column:188}}],line:501},"52":{loc:{start:{line:513,column:2},end:{line:569,column:3}},type:"if",locations:[{start:{line:513,column:2},end:{line:569,column:3}},{start:{line:513,column:2},end:{line:569,column:3}}],line:513},"53":{loc:{start:{line:524,column:6},end:{line:527,column:7}},type:"if",locations:[{start:{line:524,column:6},end:{line:527,column:7}},{start:{line:524,column:6},end:{line:527,column:7}}],line:524},"54":{loc:{start:{line:536,column:6},end:{line:539,column:7}},type:"if",locations:[{start:{line:536,column:6},end:{line:539,column:7}},{start:{line:536,column:6},end:{line:539,column:7}}],line:536},"55":{loc:{start:{line:536,column:9},end:{line:536,column:118}},type:"binary-expr",locations:[{start:{line:536,column:9},end:{line:536,column:29}},{start:{line:536,column:33},end:{line:536,column:41}},{start:{line:536,column:45},end:{line:536,column:118}}],line:536},"56":{loc:{start:{line:546,column:6},end:{line:549,column:7}},type:"if",locations:[{start:{line:546,column:6},end:{line:549,column:7}},{start:{line:546,column:6},end:{line:549,column:7}}],line:546},"57":{loc:{start:{line:553,column:4},end:{line:555,column:5}},type:"if",locations:[{start:{line:553,column:4},end:{line:555,column:5}},{start:{line:553,column:4},end:{line:555,column:5}}],line:553}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0,0,0,0,0,0],"42":[0,0],"43":[0,0,0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0,0,0,0,0,0,0],"47":[0,0],"48":[0,0,0,0],"49":[0,0],"50":[0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();//array of possible 1 step movements from relative location
var relativeCoors=(cov_1hw6k63q2i.s[0]++,[[[-1,-1],[0,-1],[1,-1]],[[-1,0],[0,0],[1,0]],[[-1,1],[0,1],[1,1]]]);//from SPECS
var CASTLE=(cov_1hw6k63q2i.s[1]++,0);var CHURCH=(cov_1hw6k63q2i.s[2]++,1);var PILGRIM=(cov_1hw6k63q2i.s[3]++,2);var CRUSADER=(cov_1hw6k63q2i.s[4]++,3);var PROPHET=(cov_1hw6k63q2i.s[5]++,4);var PREACHER=(cov_1hw6k63q2i.s[6]++,5);var MOVEMENT_RADIUS=(cov_1hw6k63q2i.s[7]++,[0,0,2,3,2,2]);/**
 * Checks is an x,y coordinate is present in a list of x,y coordinates
 * @coor	list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @paths list A list of x,y coordinates list 
 * @returntrue if coor is in paths, false otherwise
 * Example:
 * @coor = [5,6]
 * @paths = [[0,0],[2,1],[10,15]]
 * @return = false
 */cov_1hw6k63q2i.s[8]++;exports.check_if_coor_in_path=function(coor,paths){cov_1hw6k63q2i.f[0]++;var i;cov_1hw6k63q2i.s[9]++;for(i=0;i<paths.length;i++){cov_1hw6k63q2i.s[10]++;if((cov_1hw6k63q2i.b[1][0]++,coor[0]==paths[i][0])&&(cov_1hw6k63q2i.b[1][1]++,coor[1]==paths[i][1])){cov_1hw6k63q2i.b[0][0]++;cov_1hw6k63q2i.s[11]++;return true;}else{cov_1hw6k63q2i.b[0][1]++;}}cov_1hw6k63q2i.s[12]++;return false;};/**
 * Gives a list of x,y coordinate list that contains the relative locations that a unit can move to based on the map and its radius
 * @coor	list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @map list Map from battlecode
 * @radius int The radius of movement of the unit
 * @return	list A list of x,y coordinates list 
 * Example:
 * @coor = [5,6]
 * @map = Battlecode map, imagine everything is open
 * @radius = 2
 * @return = [[-2,0],[-1,-1],[-1,0],[-1,1],[0,-2],[0,-1],[0,1],[0,2],[1,-1],[1,0],[1,1],[2,0]]
 */cov_1hw6k63q2i.s[13]++;exports.get_possible_step_list=function(coor,map,radius){cov_1hw6k63q2i.f[1]++;var i;var j;var k=(cov_1hw6k63q2i.s[14]++,0);var result=(cov_1hw6k63q2i.s[15]++,[]);cov_1hw6k63q2i.s[16]++;for(i=-radius;i<=radius;i++){cov_1hw6k63q2i.s[17]++;for(j=-radius;j<=radius;j++){cov_1hw6k63q2i.s[18]++;if(this.get_distance([0,0],[i,j])<=radius){cov_1hw6k63q2i.b[2][0]++;cov_1hw6k63q2i.s[19]++;if(!((cov_1hw6k63q2i.b[4][0]++,coor[0]+i<0)||(cov_1hw6k63q2i.b[4][1]++,coor[0]+i>=map.length)||(cov_1hw6k63q2i.b[4][2]++,coor[1]+j<0)||(cov_1hw6k63q2i.b[4][3]++,coor[1]+j>=map.length)||(cov_1hw6k63q2i.b[4][4]++,i==0)&&(cov_1hw6k63q2i.b[4][5]++,j==0))){cov_1hw6k63q2i.b[3][0]++;cov_1hw6k63q2i.s[20]++;if(map[coor[1]+j][coor[0]+i]==true){cov_1hw6k63q2i.b[5][0]++;cov_1hw6k63q2i.s[21]++;result[k]=[i,j];cov_1hw6k63q2i.s[22]++;k++;}else{cov_1hw6k63q2i.b[5][1]++;}}else{cov_1hw6k63q2i.b[3][1]++;}}else{cov_1hw6k63q2i.b[2][1]++;}}}cov_1hw6k63q2i.s[23]++;return result;};/**
 * Gives a random member from a list
 * @list list of any objects
 * @return	random member of the given list
 * Example:
 * @list = [[1,6],[2,4],[6,2]]
 * @return = [6,2]
 */cov_1hw6k63q2i.s[24]++;exports.get_random_from_list=function(list){cov_1hw6k63q2i.f[2]++;cov_1hw6k63q2i.s[25]++;return list[Math.floor(Math.random()*list.length)];};/**
 * Given two coordinates it returns a two value list containing the direction to move
 * with respect to the first coordinate to the second coordinate
 * resulting list first value is:
 *    -1 if should move east
 *    1 if should move west
 *    0 if should stay in place
 * resulting list second value is:
 *    -1 if should move north
 *    1 if should move south
 *    0 if should stay in place
 * @coor1 list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @coor2 list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @return	list	A list that contains an x,y coordinate.
 * Example:
 * @coor1 = [2,2]
 * @coor2 = [4,4]
 * @return = [1,1]
 * Example:
 * @coor1 = [2,2]
 * @coor2 = [2,4]
 * @return = [0,1]
 * Example:
 * @coor1 = [4,4]
 * @coor2 = [2,4]
 * @return = [-1,0]
 */cov_1hw6k63q2i.s[26]++;exports.get_direction=function(coor1,coor2){cov_1hw6k63q2i.f[3]++;var result=(cov_1hw6k63q2i.s[27]++,[0,0]);//e-w,n-s,
cov_1hw6k63q2i.s[28]++;result[1]=coor2[1]>coor1[1]?(cov_1hw6k63q2i.b[6][0]++,1):(cov_1hw6k63q2i.b[6][1]++,coor2[1]<coor1[1]?(cov_1hw6k63q2i.b[7][0]++,-1):(cov_1hw6k63q2i.b[7][1]++,0));cov_1hw6k63q2i.s[29]++;result[0]=coor2[0]>coor1[0]?(cov_1hw6k63q2i.b[8][0]++,1):(cov_1hw6k63q2i.b[8][1]++,coor2[0]<coor1[0]?(cov_1hw6k63q2i.b[9][0]++,-1):(cov_1hw6k63q2i.b[9][1]++,0));cov_1hw6k63q2i.s[30]++;return result;};/**
 * Given a direction list (gotten from this.get_direction()), the movement radius, the battlecode map, and 
 * a current location, it returns the maximum optimum value that a unit can move in relative units
 * It takes care to not go out of bounds in map
 * @direction list	irection list (gotten from this.get_direction())
 * @radius int 
 * @map list Battlecode map
 * @currentLocation list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @return	list	A list that contains an x,y coordinate.
 * Example:
 * @direction = [0,1]
 * @radius = 3
 * @map = open map
 * @currentLocation = [9,9]
 * @return = [0,3]
 * Example:
 * @direction = [1,1]
 * @radius = 3
 * @map = open map
 * @currentLocation = [6,6]
 * @return = [2,2]
 */cov_1hw6k63q2i.s[31]++;exports.get_max_movement=function(direction,radius,map,currentLocation){cov_1hw6k63q2i.f[4]++;var result=(cov_1hw6k63q2i.s[32]++,[0,0]);var dx,dy;//TODO might break if dy and dx reach 0
cov_1hw6k63q2i.s[33]++;if((cov_1hw6k63q2i.b[11][0]++,direction[0]==0)||(cov_1hw6k63q2i.b[11][1]++,direction[1]==0)){cov_1hw6k63q2i.b[10][0]++;cov_1hw6k63q2i.s[34]++;if(direction[0]==0){cov_1hw6k63q2i.b[12][0]++;cov_1hw6k63q2i.s[35]++;//
dy=radius;cov_1hw6k63q2i.s[36]++;while(currentLocation[1]+direction[1]*dy>=map.length){cov_1hw6k63q2i.s[37]++;dy--;}cov_1hw6k63q2i.s[38]++;result[1]=direction[1]*dy;}else{cov_1hw6k63q2i.b[12][1]++;cov_1hw6k63q2i.s[39]++;if(direction[1]==0){cov_1hw6k63q2i.b[13][0]++;cov_1hw6k63q2i.s[40]++;//
dx=radius;cov_1hw6k63q2i.s[41]++;while(currentLocation[0]+direction[0]*dx>=map.length){cov_1hw6k63q2i.s[42]++;dx--;}cov_1hw6k63q2i.s[43]++;result[0]=direction[0]*dx;}else{cov_1hw6k63q2i.b[13][1]++;}}cov_1hw6k63q2i.s[44]++;return result;}else{cov_1hw6k63q2i.b[10][1]++;}cov_1hw6k63q2i.s[45]++;dx=radius-1;cov_1hw6k63q2i.s[46]++;while((cov_1hw6k63q2i.b[14][0]++,dx>0)&&(cov_1hw6k63q2i.b[14][1]++,currentLocation[0]+direction[0]*dx>=map.length)){cov_1hw6k63q2i.s[47]++;dx--;}cov_1hw6k63q2i.s[48]++;dy=radius-1;cov_1hw6k63q2i.s[49]++;while((cov_1hw6k63q2i.b[15][0]++,dy>0)&&(cov_1hw6k63q2i.b[15][1]++,currentLocation[1]+direction[1]*dy>=map.length)){cov_1hw6k63q2i.s[50]++;dy--;}cov_1hw6k63q2i.s[51]++;return[direction[0]*dx,direction[1]*dy];};/**
 * Gives distance between two points
 * @coor1 list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @coor2 list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @return double The calculated distance
 */cov_1hw6k63q2i.s[52]++;exports.get_distance=function(coor1,coor2){cov_1hw6k63q2i.f[5]++;cov_1hw6k63q2i.s[53]++;if((cov_1hw6k63q2i.b[17][0]++,typeof coor1[1]==='undefined')||(cov_1hw6k63q2i.b[17][1]++,typeof coor2[1]==='undefined')){cov_1hw6k63q2i.b[16][0]++;cov_1hw6k63q2i.s[54]++;throw"this.get_distance vars not an array";}else{cov_1hw6k63q2i.b[16][1]++;}cov_1hw6k63q2i.s[55]++;return Math.sqrt(Math.pow(coor1[0]-coor2[0],2)+Math.pow(coor1[1]-coor2[1],2));};/**
 * Generates an array of relative x,y coordinates that a unit from its current location can move to 
 * @currentLocation list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @radius int 
 * @map list Battlecode map
 * @previousPathsTaken list A list of multiple x,y coordinates that contains the previous paths taken, can be empty
 * @return list possible coordinates a unit can move
 */cov_1hw6k63q2i.s[56]++;exports.generate_open_list=function(currentLocation,radius,map,previousPathsTaken){cov_1hw6k63q2i.f[6]++;//this gives relative x,y location only based on map
var openPaths=(cov_1hw6k63q2i.s[57]++,this.get_possible_step_list(currentLocation,map,radius));var i;cov_1hw6k63q2i.s[58]++;for(i=0;i<openPaths.length;i++){cov_1hw6k63q2i.s[59]++;if(this.check_if_coor_in_path([openPaths[i][0]+currentLocation[0],openPaths[i][1]+currentLocation[1]],previousPathsTaken)==true){cov_1hw6k63q2i.b[18][0]++;cov_1hw6k63q2i.s[60]++;openPaths.splice(i,1);cov_1hw6k63q2i.s[61]++;i--;}else{cov_1hw6k63q2i.b[18][1]++;}}cov_1hw6k63q2i.s[62]++;return openPaths;};/**
 * Generates a list with the same index position in openList denoting its g value
 * g value is the movement cost to move from the starting point to a given square on the grid, following the path generated to get there.
 * @openList list possible coordinates a unit can move
 * @return list of g values in same index as openList
 */cov_1hw6k63q2i.s[63]++;exports.calculate_open_list_g=function(openList,type){cov_1hw6k63q2i.f[7]++;var i;var result=(cov_1hw6k63q2i.s[64]++,[]);cov_1hw6k63q2i.s[65]++;for(i=0;i<openList.length;i++){cov_1hw6k63q2i.s[66]++;if(type==1){cov_1hw6k63q2i.b[19][0]++;cov_1hw6k63q2i.s[67]++;//fuel
result.push(this.get_distance([0,0],openList[i]));}else{cov_1hw6k63q2i.b[19][1]++;cov_1hw6k63q2i.s[68]++;//turn
result.push(1.0);}}cov_1hw6k63q2i.s[69]++;return result;};/**
 * Generates a list with the same index position in openList denoting its h value
 * h value the estimated movement cost to move from that given square on the grid to the final destination.
 * I am using euclidian distance, but could explore using diagonal distance for pilgrim
 * @currentLocation list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @destination list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @openList list possible coordinates a unit can move
 * @return list of h values in same index as openList
 */cov_1hw6k63q2i.s[70]++;exports.calculate_open_list_h=function(currentLocation,destination,openList){cov_1hw6k63q2i.f[8]++;var i;var result=(cov_1hw6k63q2i.s[71]++,[]);var potentialMove=(cov_1hw6k63q2i.s[72]++,[]);cov_1hw6k63q2i.s[73]++;for(i=0;i<openList.length;i++){cov_1hw6k63q2i.s[74]++;potentialMove[0]=openList[i][0]+currentLocation[0];cov_1hw6k63q2i.s[75]++;potentialMove[1]=openList[i][1]+currentLocation[1];cov_1hw6k63q2i.s[76]++;result.push(this.get_distance(potentialMove,destination));}cov_1hw6k63q2i.s[77]++;return result;};cov_1hw6k63q2i.s[78]++;exports.get_next_step_astar_fuel=function(currentLocation,destination,map,previousPathsTaken,radius){cov_1hw6k63q2i.f[9]++;cov_1hw6k63q2i.s[79]++;return this.get_next_step_astar(currentLocation,destination,map,previousPathsTaken,radius,1);};cov_1hw6k63q2i.s[80]++;exports.get_next_step_astar_turn=function(currentLocation,destination,map,previousPathsTaken,radius){cov_1hw6k63q2i.f[10]++;cov_1hw6k63q2i.s[81]++;return this.get_next_step_astar(currentLocation,destination,map,previousPathsTaken,radius,0);};cov_1hw6k63q2i.s[82]++;exports.get_next_step_astar=function(currentLocation,destination,map,previousPathsTaken,radius,type){cov_1hw6k63q2i.f[11]++;cov_1hw6k63q2i.s[83]++;if(this.get_distance(currentLocation,destination)<radius){cov_1hw6k63q2i.b[20][0]++;cov_1hw6k63q2i.s[84]++;return destination;}else{cov_1hw6k63q2i.b[20][1]++;}var openList=(cov_1hw6k63q2i.s[85]++,[]);var gList=(cov_1hw6k63q2i.s[86]++,[]);var hList=(cov_1hw6k63q2i.s[87]++,[]);var minList=(cov_1hw6k63q2i.s[88]++,[]);var currentMin;var i;var chosenMin;//generate open list (list of squares that I can move based on the radius, map, visible robots, previous path)
cov_1hw6k63q2i.s[89]++;openList=this.generate_open_list(currentLocation,radius,map,previousPathsTaken);//calculate g for open list
cov_1hw6k63q2i.s[90]++;gList=this.calculate_open_list_g(openList,type);//calculate h for open list
cov_1hw6k63q2i.s[91]++;hList=this.calculate_open_list_h(currentLocation,destination,openList);//pick lowest g+h value as next step
//  if there is more than one g+h min value, pick one with lowest h cost
cov_1hw6k63q2i.s[92]++;currentMin=gList[0]+hList[0];cov_1hw6k63q2i.s[93]++;for(i=0;i<openList.length;i++){cov_1hw6k63q2i.s[94]++;if(gList[i]+hList[i]<currentMin){cov_1hw6k63q2i.b[21][0]++;cov_1hw6k63q2i.s[95]++;currentMin=gList[i]+hList[i];}else{cov_1hw6k63q2i.b[21][1]++;}}cov_1hw6k63q2i.s[96]++;for(i=0;i<openList.length;i++){cov_1hw6k63q2i.s[97]++;if(gList[i]+hList[i]===currentMin){cov_1hw6k63q2i.b[22][0]++;cov_1hw6k63q2i.s[98]++;minList.push(i);}else{cov_1hw6k63q2i.b[22][1]++;}}cov_1hw6k63q2i.s[99]++;if(minList.length>1){cov_1hw6k63q2i.b[23][0]++;cov_1hw6k63q2i.s[100]++;currentMin=hList[minList[0]];cov_1hw6k63q2i.s[101]++;chosenMin=minList[0];cov_1hw6k63q2i.s[102]++;for(i=0;i<minList.length;i++){cov_1hw6k63q2i.s[103]++;if(hList[minList[i]]<currentMin){cov_1hw6k63q2i.b[24][0]++;cov_1hw6k63q2i.s[104]++;currentMin=hList[minList[i]];cov_1hw6k63q2i.s[105]++;chosenMin=minList[i];}else{cov_1hw6k63q2i.b[24][1]++;}}}else{cov_1hw6k63q2i.b[23][1]++;cov_1hw6k63q2i.s[106]++;chosenMin=minList[0];}cov_1hw6k63q2i.s[107]++;return[currentLocation[0]+openList[chosenMin][0],currentLocation[1]+openList[chosenMin][1]];};/**
 * Given a current location coordinate, destination coordinate, a map, a list of previous visited coordinates, and the unit radus
 * It returns the greedy next step to take from the current location to reach the coordinate. Takes into account the unit radius,
 * unpassable tiles in map. 
 * It prevents an infite loop by checking against a list of previous visited coordinates, so it does not go back and forth the same place
 * You can also use the list of previous coordinates to add any coordinate you dont want to visit (as is a list of current occupied tiles by robots or buildings)
 * @currentLocation list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @destination list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @map list Battlecode map
 * @previousPathsTaken list A list of coordinate list
 * @radius int 
 * @return	list	A list that contains an x,y coordinate of the next step to make in absolute units
 * Example:
 * @currentLocation = [0,0]
 * @destination = [10,10]
 * @map = open map
 * @previousPathsTaken = []
 * @radius = 3 
 * @return = [2,2]
 * Example:
 * @currentLocation = [0,0]
 * @destination = [10,10]
 * @map = open map, unpassable tile at 2,2
 * @previousPathsTaken = []
 * @radius = 3 
 * @return = [3,0]  
 */cov_1hw6k63q2i.s[108]++;exports.get_next_step=function(currentLocation,destination,map,previousPathsTaken,radius){cov_1hw6k63q2i.f[12]++;cov_1hw6k63q2i.s[109]++;//r.log(currentLocation);
//r.log(destination);
if(this.get_distance(currentLocation,destination)<radius){cov_1hw6k63q2i.b[25][0]++;cov_1hw6k63q2i.s[110]++;return destination;}else{cov_1hw6k63q2i.b[25][1]++;}//generate open list (list of squares that I can move based on the radius, map, visible robots, previous path)
//calculate g for open list
//calculate h for open list
//pick lowest g+h value as next step
//  if there is more than one g+h min value, pick one with lowest h cost
var direction=(cov_1hw6k63q2i.s[111]++,this.get_direction(currentLocation,destination));var maxMovement=(cov_1hw6k63q2i.s[112]++,this.get_max_movement(direction,radius,map,currentLocation));var openPaths;// = get_possible_steps(currentLocation,map);
var newLocation=(cov_1hw6k63q2i.s[113]++,[currentLocation[0],currentLocation[1]]);var moveAvailable=(cov_1hw6k63q2i.s[114]++,false);var i;cov_1hw6k63q2i.s[115]++;if(((cov_1hw6k63q2i.b[27][0]++,maxMovement[0]!=0)||(cov_1hw6k63q2i.b[27][1]++,maxMovement[1]!=0))&&(cov_1hw6k63q2i.b[27][2]++,map[newLocation[1]+maxMovement[1]][newLocation[0]+maxMovement[0]]==true)){cov_1hw6k63q2i.b[26][0]++;cov_1hw6k63q2i.s[116]++;newLocation[0]=newLocation[0]+maxMovement[0];cov_1hw6k63q2i.s[117]++;newLocation[1]=newLocation[1]+maxMovement[1];cov_1hw6k63q2i.s[118]++;moveAvailable=true;}else{cov_1hw6k63q2i.b[26][1]++;}cov_1hw6k63q2i.s[119]++;for(i=maxMovement[0];(cov_1hw6k63q2i.b[28][0]++,i>0)&&(cov_1hw6k63q2i.b[28][1]++,!moveAvailable);i--){cov_1hw6k63q2i.s[120]++;if(map[newLocation[1]][newLocation[0]+i]==true){cov_1hw6k63q2i.b[29][0]++;cov_1hw6k63q2i.s[121]++;newLocation[0]=newLocation[0]+i;cov_1hw6k63q2i.s[122]++;break;}else{cov_1hw6k63q2i.b[29][1]++;}}cov_1hw6k63q2i.s[123]++;for(i=maxMovement[1];(cov_1hw6k63q2i.b[30][0]++,i>0)&&(cov_1hw6k63q2i.b[30][1]++,!moveAvailable);i--){cov_1hw6k63q2i.s[124]++;if(map[newLocation[1]+i][newLocation[0]]==true){cov_1hw6k63q2i.b[31][0]++;cov_1hw6k63q2i.s[125]++;newLocation[1]=newLocation[1]+i;cov_1hw6k63q2i.s[126]++;break;}else{cov_1hw6k63q2i.b[31][1]++;}}cov_1hw6k63q2i.s[127]++;if((cov_1hw6k63q2i.b[33][0]++,!moveAvailable)&&((cov_1hw6k63q2i.b[33][1]++,newLocation[0]!=currentLocation[0])||(cov_1hw6k63q2i.b[33][2]++,newLocation[1]!=currentLocation[1]))){cov_1hw6k63q2i.b[32][0]++;cov_1hw6k63q2i.s[128]++;moveAvailable=true;}else{cov_1hw6k63q2i.b[32][1]++;}cov_1hw6k63q2i.s[129]++;if(moveAvailable==true){cov_1hw6k63q2i.b[34][0]++;cov_1hw6k63q2i.s[130]++;if(!this.check_if_coor_in_path(newLocation,previousPathsTaken)){cov_1hw6k63q2i.b[35][0]++;cov_1hw6k63q2i.s[131]++;//this option does not allow backtracking
return newLocation;}else{cov_1hw6k63q2i.b[35][1]++;}cov_1hw6k63q2i.s[132]++;newLocation=[currentLocation[0],currentLocation[1]];}else{cov_1hw6k63q2i.b[34][1]++;}cov_1hw6k63q2i.s[133]++;openPaths=this.get_possible_step_list(currentLocation,map,radius);//else if could not move, need to figure out where to move to continue.
//this could break if enter into tunnel
//return random open path
var newPath=(cov_1hw6k63q2i.s[134]++,this.get_random_from_list(openPaths));//console.log(this.check_if_coor_in_path(newPath,previousPathsTaken));
//console.log([newLocation[0] + newPath[0],newLocation[1] + newPath[1]]);
//console.log(this.check_if_coor_in_path([newLocation[0] + newPath[0],newLocation[1] + newPath[1]],previousPathsTaken));
cov_1hw6k63q2i.s[135]++;while(this.check_if_coor_in_path([newLocation[0]+newPath[0],newLocation[1]+newPath[1]],previousPathsTaken)){cov_1hw6k63q2i.s[136]++;//this option does not allow backtracking
newPath=this.get_random_from_list(openPaths);}cov_1hw6k63q2i.s[137]++;return[newLocation[0]+newPath[0],newLocation[1]+newPath[1]];};/**
 * Given an origin and destination coordinates, along with a map and unit type, gives a list of absolute coordinates that are the
 * steps to take to reach the destination with the current state of the map
 * @origin list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @destination list	A list that contains an x,y coordinate. Always of size 2 and x is always 0, y is always 1
 * @map list Battlecode map
 * @unit int As defined by the battlecode SPECS
 * @return	list	A list of x,y coordinates that start at origin and reach destination
 */cov_1hw6k63q2i.s[138]++;exports.find_path_to_coordinate=function(origin,destination,map,unit){cov_1hw6k63q2i.f[13]++;var path=(cov_1hw6k63q2i.s[139]++,[]);var nextStep=(cov_1hw6k63q2i.s[140]++,this.get_next_step(origin,destination,map,path,MOVEMENT_RADIUS[unit.unit]));var i=(cov_1hw6k63q2i.s[141]++,1);cov_1hw6k63q2i.s[142]++;path[0]=[nextStep[0],nextStep[1]];cov_1hw6k63q2i.s[143]++;while((cov_1hw6k63q2i.b[36][0]++,nextStep[0]!=destination[0])||(cov_1hw6k63q2i.b[36][1]++,nextStep[1]!=destination[1])){cov_1hw6k63q2i.s[144]++;//r.log(i);
nextStep=this.get_next_step(nextStep,destination,map,path,MOVEMENT_RADIUS[unit.unit]);cov_1hw6k63q2i.s[145]++;path[i]=[nextStep[0],nextStep[1]];cov_1hw6k63q2i.s[146]++;i++;}cov_1hw6k63q2i.s[147]++;return path;};/**
 * Given the object of visible robots (from the main helper function getVisibleRobots()) it returns a 
 * list of x,y coordinate list of their locations.
 * @visible object The visible robots object from the helper function
 * @return	list	A list of x,y coordinates with the locations of the robots
 */cov_1hw6k63q2i.s[148]++;exports.get_visible_robots_list=function(visible){cov_1hw6k63q2i.f[14]++;var res=(cov_1hw6k63q2i.s[149]++,[]);cov_1hw6k63q2i.s[150]++;for(var i=(cov_1hw6k63q2i.s[151]++,0);i<visible.length;i++){cov_1hw6k63q2i.s[152]++;res.push([visible[i].x,visible[i].y]);}cov_1hw6k63q2i.s[153]++;return res;};cov_1hw6k63q2i.s[154]++;exports.get_possible_square_steps_list=function(coor,map){cov_1hw6k63q2i.f[15]++;var i;var j;var k=(cov_1hw6k63q2i.s[155]++,0);var result=(cov_1hw6k63q2i.s[156]++,[]);cov_1hw6k63q2i.s[157]++;for(i=-1;i<=1;i++){cov_1hw6k63q2i.s[158]++;for(j=-1;j<=1;j++){cov_1hw6k63q2i.s[159]++;if(!((cov_1hw6k63q2i.b[38][0]++,coor[0]+i<0)||(cov_1hw6k63q2i.b[38][1]++,coor[0]+i>=map.length)||(cov_1hw6k63q2i.b[38][2]++,coor[1]+j<0)||(cov_1hw6k63q2i.b[38][3]++,coor[1]+j>=map.length)||(cov_1hw6k63q2i.b[38][4]++,i==0)&&(cov_1hw6k63q2i.b[38][5]++,j==0))){cov_1hw6k63q2i.b[37][0]++;cov_1hw6k63q2i.s[160]++;if(map[coor[1]+j][coor[0]+i]==true){cov_1hw6k63q2i.b[39][0]++;cov_1hw6k63q2i.s[161]++;result[k]=[i,j];cov_1hw6k63q2i.s[162]++;k++;}else{cov_1hw6k63q2i.b[39][1]++;}}else{cov_1hw6k63q2i.b[37][1]++;}}}cov_1hw6k63q2i.s[163]++;return result;};cov_1hw6k63q2i.s[164]++;exports.get_absolute_possible_square_checkerboard_steps_list=function(coor,map){cov_1hw6k63q2i.f[16]++;var i;var j;var k=(cov_1hw6k63q2i.s[165]++,0);var result=(cov_1hw6k63q2i.s[166]++,[]);cov_1hw6k63q2i.s[167]++;for(i=-1;i<=1;i++){cov_1hw6k63q2i.s[168]++;for(j=-1;j<=1;j++){cov_1hw6k63q2i.s[169]++;if((cov_1hw6k63q2i.b[41][0]++,i==0)&&(cov_1hw6k63q2i.b[41][1]++,j==0)||(cov_1hw6k63q2i.b[41][2]++,i==1)&&(cov_1hw6k63q2i.b[41][3]++,j==0)||(cov_1hw6k63q2i.b[41][4]++,i==-1)&&(cov_1hw6k63q2i.b[41][5]++,j==0)||(cov_1hw6k63q2i.b[41][6]++,i==0)&&(cov_1hw6k63q2i.b[41][7]++,j==1)||(cov_1hw6k63q2i.b[41][8]++,i==0)&&(cov_1hw6k63q2i.b[41][9]++,j==-1)){cov_1hw6k63q2i.b[40][0]++;cov_1hw6k63q2i.s[170]++;continue;}else{cov_1hw6k63q2i.b[40][1]++;}cov_1hw6k63q2i.s[171]++;if(!((cov_1hw6k63q2i.b[43][0]++,coor[0]+i<0)||(cov_1hw6k63q2i.b[43][1]++,coor[0]+i>=map.length)||(cov_1hw6k63q2i.b[43][2]++,coor[1]+j<0)||(cov_1hw6k63q2i.b[43][3]++,coor[1]+j>=map.length))){cov_1hw6k63q2i.b[42][0]++;cov_1hw6k63q2i.s[172]++;if(map[coor[1]+j][coor[0]+i]==true){cov_1hw6k63q2i.b[44][0]++;cov_1hw6k63q2i.s[173]++;result[k]=[i+coor[0],j+coor[1]];cov_1hw6k63q2i.s[174]++;k++;}else{cov_1hw6k63q2i.b[44][1]++;}}else{cov_1hw6k63q2i.b[42][1]++;}}}cov_1hw6k63q2i.s[175]++;return result;};cov_1hw6k63q2i.s[176]++;exports.get_absolute_impossible_square_checkerboard_steps_list=function(coor,map){cov_1hw6k63q2i.f[17]++;var i;var j;var k=(cov_1hw6k63q2i.s[177]++,0);var result=(cov_1hw6k63q2i.s[178]++,[]);cov_1hw6k63q2i.s[179]++;for(i=-1;i<=1;i++){cov_1hw6k63q2i.s[180]++;for(j=-1;j<=1;j++){cov_1hw6k63q2i.s[181]++;if((cov_1hw6k63q2i.b[46][0]++,i==0)&&(cov_1hw6k63q2i.b[46][1]++,j==0)||(cov_1hw6k63q2i.b[46][2]++,i==1)&&(cov_1hw6k63q2i.b[46][3]++,j==0)||(cov_1hw6k63q2i.b[46][4]++,i==-1)&&(cov_1hw6k63q2i.b[46][5]++,j==0)||(cov_1hw6k63q2i.b[46][6]++,i==0)&&(cov_1hw6k63q2i.b[46][7]++,j==1)||(cov_1hw6k63q2i.b[46][8]++,i==0)&&(cov_1hw6k63q2i.b[46][9]++,j==-1)){cov_1hw6k63q2i.b[45][0]++;cov_1hw6k63q2i.s[182]++;result[k]=[i+coor[0],j+coor[1]];cov_1hw6k63q2i.s[183]++;k++;}else{cov_1hw6k63q2i.b[45][1]++;}cov_1hw6k63q2i.s[184]++;if(!((cov_1hw6k63q2i.b[48][0]++,coor[0]+i<0)||(cov_1hw6k63q2i.b[48][1]++,coor[0]+i>=map.length)||(cov_1hw6k63q2i.b[48][2]++,coor[1]+j<0)||(cov_1hw6k63q2i.b[48][3]++,coor[1]+j>=map.length))){cov_1hw6k63q2i.b[47][0]++;cov_1hw6k63q2i.s[185]++;if(map[coor[1]+j][coor[0]+i]==true){cov_1hw6k63q2i.b[49][0]++;cov_1hw6k63q2i.s[186]++;continue;}else{cov_1hw6k63q2i.b[49][1]++;}}else{cov_1hw6k63q2i.b[47][1]++;}}}cov_1hw6k63q2i.s[187]++;return result;};//[{"type":"robot","id":2022,"team":0,"x":3,"y":0,"unit":2,"turn":6,"signal":-1,"signal_radius":-1},{"type":"robot","id":3650,"team":0,"x":4,"y":2,"unit":0,"turn":8,"signal":-1,"signal_radius":-1},{"type":"robot","id":3594,"team":0,"x":4,"y":1,"unit":4,"health":20,"karbonite":0,"fuel":0,"turn":1,"signal":0,"signal_radius":0,"time":120},{"type":"robot","id":1218,"team":0,"x":6,"y":2,"unit":2,"turn":7,"signal":-1,"signal_radius":-1},{"type":"robot","id":1303,"team":0,"x":6,"y":1,"unit":2,"turn":8,"signal":-1,"signal_radius":-1}]
cov_1hw6k63q2i.s[188]++;exports.get_next_checkerboard_step=function(currentLocation,map,visibleRobots,previousPathsTaken,radius){cov_1hw6k63q2i.f[18]++;var closeRobots=(cov_1hw6k63q2i.s[189]++,visibleRobots.filter(robot=>{cov_1hw6k63q2i.f[19]++;cov_1hw6k63q2i.s[190]++;return(cov_1hw6k63q2i.b[50][0]++,this.get_distance(currentLocation,[robot.x,robot.y])<=Math.sqrt(2))&&(cov_1hw6k63q2i.b[50][1]++,!((cov_1hw6k63q2i.b[51][0]++,robot.x==currentLocation[0])&&(cov_1hw6k63q2i.b[51][1]++,robot.y==currentLocation[1])))&&(cov_1hw6k63q2i.b[50][2]++,robot.unit>=2);}));var openPaths;var otherOpenPaths=(cov_1hw6k63q2i.s[191]++,[]);var otherClosedPaths=(cov_1hw6k63q2i.s[192]++,[]);var loc;var i;var j;var tempPath;var otherRobotsLocations=(cov_1hw6k63q2i.s[193]++,[]);var newPaths;var chosenPath;cov_1hw6k63q2i.s[194]++;console.log(closeRobots.length);cov_1hw6k63q2i.s[195]++;if(closeRobots.length>0){cov_1hw6k63q2i.b[52][0]++;cov_1hw6k63q2i.s[196]++;for(i=0;i<closeRobots.length;i++){cov_1hw6k63q2i.s[197]++;otherRobotsLocations[i]=[closeRobots[i].x,closeRobots[i].y];cov_1hw6k63q2i.s[198]++;otherOpenPaths=otherOpenPaths.concat(this.get_absolute_possible_square_checkerboard_steps_list(otherRobotsLocations[i],map));cov_1hw6k63q2i.s[199]++;otherClosedPaths=otherClosedPaths.concat(this.get_absolute_impossible_square_checkerboard_steps_list(otherRobotsLocations[i],map));}//console.log("-----------");
//console.log(otherClosedPaths);
//console.log("-----------");
cov_1hw6k63q2i.s[200]++;for(i=0;i<otherOpenPaths.length;i++){cov_1hw6k63q2i.s[201]++;if(this.check_if_coor_in_path(otherOpenPaths[i],otherRobotsLocations)==true){cov_1hw6k63q2i.b[53][0]++;cov_1hw6k63q2i.s[202]++;otherOpenPaths.splice(i,1);cov_1hw6k63q2i.s[203]++;i--;}else{cov_1hw6k63q2i.b[53][1]++;}}//console.log(otherRobotsLocations);
//console.log(otherOpenPaths);
cov_1hw6k63q2i.s[204]++;for(i=0;i<otherOpenPaths.length;i++){//is any of the other of both open paths at sqrt(2) distace of me? If yes move there
var temp=(cov_1hw6k63q2i.s[205]++,this.get_distance(otherOpenPaths[i],currentLocation));//console.log(temp);
//console.log(otherOpenPaths[i]);
cov_1hw6k63q2i.s[206]++;if((cov_1hw6k63q2i.b[55][0]++,temp<=Math.sqrt(2))&&(cov_1hw6k63q2i.b[55][1]++,temp>0)&&(cov_1hw6k63q2i.b[55][2]++,this.check_if_coor_in_path(otherOpenPaths[i],previousPathsTaken)==false)){cov_1hw6k63q2i.b[54][0]++;cov_1hw6k63q2i.s[207]++;console.log("return 502");cov_1hw6k63q2i.s[208]++;return otherOpenPaths[i];}else{cov_1hw6k63q2i.b[54][1]++;}}//else get mine if see if I can move
cov_1hw6k63q2i.s[209]++;console.log("else 506");cov_1hw6k63q2i.s[210]++;openPaths=this.get_absolute_possible_square_checkerboard_steps_list(currentLocation,map);cov_1hw6k63q2i.s[211]++;for(i=0;i<openPaths.length;i++){cov_1hw6k63q2i.s[212]++;if(this.check_if_coor_in_path(openPaths[i],otherRobotsLocations.concat(previousPathsTaken.concat(otherClosedPaths)))==true){cov_1hw6k63q2i.b[56][0]++;cov_1hw6k63q2i.s[213]++;openPaths.splice(i,1);cov_1hw6k63q2i.s[214]++;i--;}else{cov_1hw6k63q2i.b[56][1]++;}}//console.log(openPaths);
//console.log(openPaths.length);
cov_1hw6k63q2i.s[215]++;if(openPaths.length>0){cov_1hw6k63q2i.b[57][0]++;cov_1hw6k63q2i.s[216]++;return this.get_random_from_list(openPaths);}else{cov_1hw6k63q2i.b[57][1]++;}cov_1hw6k63q2i.s[217]++;return currentLocation;}else{cov_1hw6k63q2i.b[52][1]++;cov_1hw6k63q2i.s[218]++;console.log("else");cov_1hw6k63q2i.s[219]++;openPaths=this.get_absolute_possible_square_checkerboard_steps_list(currentLocation,map);cov_1hw6k63q2i.s[220]++;chosenPath=this.get_random_from_list(openPaths);cov_1hw6k63q2i.s[221]++;while(this.check_if_coor_in_path(chosenPath,previousPathsTaken)){cov_1hw6k63q2i.s[222]++;//this option does not allow backtracking
chosenPath=this.get_random_from_list(openPaths);}cov_1hw6k63q2i.s[223]++;return chosenPath;//this.get_random_from_list([[currentLocation[0]+1,currentLocation[1]],[currentLocation[0]-1,currentLocation[1]],[currentLocation[0],currentLocation[1]+1],[currentLocation[0],currentLocation[1]-1]]);
}};